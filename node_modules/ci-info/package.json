{
  "_args": [
    [
      {
        "raw": "ci-info@^1.5.0",
        "scope": null,
        "escapedName": "ci-info",
        "name": "ci-info",
        "rawSpec": "^1.5.0",
        "spec": ">=1.5.0 <2.0.0",
        "type": "range"
      },
      "F:\\website\\node-rest-shop\\node_modules\\is-ci"
    ]
  ],
  "_from": "ci-info@^1.5.0",
  "_hasShrinkwrap": false,
  "_id": "ci-info@1.5.1",
  "_location": "/ci-info",
  "_nodeVersion": "10.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ci-info_1.5.1_1536489386481_0.010115633667440393"
  },
  "_npmUser": {
    "name": "watson",
    "email": "w@tson.dk"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ci-info@^1.5.0",
    "scope": null,
    "escapedName": "ci-info",
    "name": "ci-info",
    "rawSpec": "^1.5.0",
    "spec": ">=1.5.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/is-ci"
  ],
  "_resolved": "https://registry.npmjs.org/ci-info/-/ci-info-1.5.1.tgz",
  "_shasum": "17e8eb5de6f8b2b6038f0cbb714d410bfa9f3030",
  "_shrinkwrap": null,
  "_spec": "ci-info@^1.5.0",
  "_where": "F:\\website\\node-rest-shop\\node_modules\\is-ci",
  "author": {
    "name": "Thomas Watson Steen",
    "email": "w@tson.dk",
    "url": "https://twitter.com/wa7son"
  },
  "bugs": {
    "url": "https://github.com/watson/ci-info/issues"
  },
  "coordinates": [
    55.778273,
    12.593054
  ],
  "dependencies": {},
  "description": "Get details about the current Continuous Integration environment",
  "devDependencies": {
    "clear-require": "^1.0.1",
    "standard": "^12.0.1",
    "tape": "^4.9.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-fKFIKXaYiL1exImwJ0AhR/6jxFPSKQBk2ayV5NiNoruUs2+rxC2kNw0EG+1Z9dugZRdCrppskQ8DN2cyaUM1Hw==",
    "shasum": "17e8eb5de6f8b2b6038f0cbb714d410bfa9f3030",
    "tarball": "https://registry.npmjs.org/ci-info/-/ci-info-1.5.1.tgz",
    "fileCount": 6,
    "unpackedSize": 10584,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJblPerCRA9TVsSAnZWagAAp9EP/3VdZoPIJEXby7IgLqTM\nJ7J3sCBTPb+Oxa2kd94Sav8EQ3KcA76HfYvCT7tvtTtChNlymZGz7LNfgmSJ\ncovADvxHZ5oglqEvfLLxSqlwMtq6jGABL91thJqBit72C4RNC4Ecyolkr6CE\nDINeteOjFLlJDGAaCXbdw32+FYCyufJFNnbl1mpF6oeSil6ACtIcTwnGLu1R\nUXsTG9YJcQlDe1WZmpufdHv2i9GP/BeQD1fRIHxwjkjCNtR8Xp5knyw6Yedr\nAbJTdxMvJds8rGLGsSRvyIYR5HrAUM96PXgpwyTR2CWmGJ9u+zE7q3BCvFWq\nVtLHZGu6ew09S8d//b0V5ASaytGVzyQPavRjAQ5wibZHT9b/5pbj/sqSqJjE\njZIC/pa5dlG+Lt4sSF80R5+bm704Jmh+PX96z/aQGb2IQMoNaWVKvBsN2rod\n+AuzQZyX25RLCeFVKJLCf9SET8pTz+R9Aj3vVw+rcRh5Xdhi/E3D9w8Hc+wR\nBcsPKHjZGN6kRFHsI7Rjk8OUs5cLDtU366UNlBVMEShJYMRLEpw0N5EJI4SU\nLGZ8kEDO53Pvj0M71HadECDJVXgm+g73yoadvQaMTgCsnknCUANnIjtFqydc\n5jsSj8cUPelZ49Zg82dKnvxDr89GPHjkJ69b4ORkYpjXaRoBRZJOrzfvPCLH\nH2nw\r\n=AseE\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "d2837c895da577a1a63698d97fb6a78780c1c404",
  "homepage": "https://github.com/watson/ci-info",
  "keywords": [
    "ci",
    "continuous",
    "integration",
    "test",
    "detect"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "watson",
      "email": "w@tson.dk"
    }
  ],
  "name": "ci-info",
  "optionalDependencies": {},
  "readme": "# ci-info\n\nGet details about the current Continuous Integration environment.\n\nPlease [open an\nissue](https://github.com/watson/ci-info/issues/new?template=ci-server-not-detected.md)\nif your CI server isn't properly detected :)\n\n[![npm](https://img.shields.io/npm/v/ci-info.svg)](https://www.npmjs.com/package/ci-info)\n[![Build status](https://travis-ci.org/watson/ci-info.svg?branch=master)](https://travis-ci.org/watson/ci-info)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\n```bash\nnpm install ci-info --save\n```\n\n## Usage\n\n```js\nvar ci = require('ci-info')\n\nif (ci.isCI) {\n  console.log('The name of the CI server is:', ci.name)\n} else {\n  console.log('This program is not running on a CI server')\n}\n```\n\n## Supported CI tools\n\nOfficially supported CI servers:\n\n| Name | Constant |\n|------|----------|\n| [AWS CodeBuild](https://aws.amazon.com/codebuild/) | `ci.CODEBUILD` |\n| [AppVeyor](http://www.appveyor.com) | `ci.APPVEYOR` |\n| [Bamboo](https://www.atlassian.com/software/bamboo) by Atlassian | `ci.BAMBOO` |\n| [Bitbucket Pipelines](https://bitbucket.org/product/features/pipelines) | `ci.BITBUCKET` |\n| [Buildkite](https://buildkite.com) | `ci.BUILDKITE` |\n| [CircleCI](http://circleci.com) | `ci.CIRCLE` |\n| [Cirrus CI](https://cirrus-ci.org) | `ci.CIRRUS` |\n| [Codeship](https://codeship.com) | `ci.CODESHIP` |\n| [Drone](https://drone.io) | `ci.DRONE` |\n| [dsari](https://github.com/rfinnie/dsari) | `ci.DSARI` |\n| [GitLab CI](https://about.gitlab.com/gitlab-ci/) | `ci.GITLAB` |\n| [GoCD](https://www.go.cd/) | `ci.GOCD` |\n| [Hudson](http://hudson-ci.org) | `ci.HUDSON` |\n| [Jenkins CI](https://jenkins-ci.org) | `ci.JENKINS` |\n| [Magnum CI](https://magnum-ci.com) | `ci.MAGNUM` |\n| [Semaphore](https://semaphoreci.com) | `ci.SEMAPHORE` |\n| [Shippable](https://www.shippable.com/) | `ci.SHIPPABLE` |\n| [Solano CI](https://www.solanolabs.com/) | `ci.SOLANO` |\n| [Strider CD](https://strider-cd.github.io/) | `ci.STRIDER` |\n| [TaskCluster](http://docs.taskcluster.net) | `ci.TASKCLUSTER` |\n| [Team Foundation Server](https://www.visualstudio.com/en-us/products/tfs-overview-vs.aspx) by Microsoft | `ci.TFS` |\n| [TeamCity](https://www.jetbrains.com/teamcity/) by JetBrains | `ci.TEAMCITY` |\n| [Travis CI](http://travis-ci.org) | `ci.TRAVIS` |\n\n## API\n\n### `ci.name`\n\nA string. Will contain the name of the CI server the code is running on.\nIf not CI server is detected, it will be `null`.\n\nDon't depend on the value of this string not to change for a specific\nvendor. If you find your self writing `ci.name === 'Travis CI'`, you\nmost likely want to use `ci.TRAVIS` instead.\n\n### `ci.isCI`\n\nA boolean. Will be `true` if the code is running on a CI server.\nOtherwise `false`.\n\nSome CI servers not listed here might still trigger the `ci.isCI`\nboolean to be set to `true` if they use certain vendor neutral\nenvironment variables. In those cases `ci.name` will be `null` and no\nvendor specific boolean will be set to `true`.\n\n### `ci.isPR`\n\nA boolean if PR detection is supported for the current CI server. Will\nbe `true` if a PR is being tested. Otherwise `false`. If PR detection is\nnot supported for the current CI server, the value will be `null`.\n\n### `ci.<VENDOR-CONSTANT>`\n\nA vendor specific boolean constants is exposed for each support CI\nvendor. A constant will be `true` if the code is determined to run on\nthe given CI server.  Otherwise `false`.\n\nExamples of vendor constants are `ci.TRAVIS` or `ci.APPVEYOR`. For a\ncomplete list, see the support table above.\n\nDeprecated vendor constants that will be removed in the next major\nrelease:\n\n- `ci.TDDIUM` (Solano CI) This have been renamed `ci.SOLANO`\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/watson/ci-info.git"
  },
  "scripts": {
    "test": "standard && node test.js"
  },
  "version": "1.5.1"
}
